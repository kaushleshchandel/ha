substitutions:
  devicename: max6675_temp
  device_shortname: max
  id_prefix: max_

<<: !include .base.common_8266.yaml


font:
  - file: 'slkscr.ttf'
    id: font1
    size: 8

  - file: 'arial.ttf'
    id: font3
    size: 32

i2c:
  sda: D2
  scl: D1
  scan: false
  frequency: 700khz


spi:
  miso_pin: D5
  clk_pin: D7

#define SCK_PIN 13 // D7
#define CS_PIN  12 // D6
#define SO_PIN  14 // D5 

sensor:
  - platform: max6675
    name: "MAX6675 Temperature"
    id: maxxi
    cs_pin: D6
    update_interval: 300s

status_led:
  pin:
    number: GPIO2
    inverted: yes    
    

time:
  - platform: homeassistant
    id: esptime
     

display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    address: 0x3C
    id: my_display
    brightness : 0.5
    pages:
      - id: page_init
        lambda: |-
          if (id(maxxi).has_state()) {
            it.printf(127, 23, id(font3), TextAlign::TOP_RIGHT , "%.1fÂ°", id(maxxi).state);
          }
          
           
#      - id: page_status
#        lambda: |-
#          it.print(64, 0, id(font3), TextAlign::TOP_CENTER,  id(maxxi).state.c_str());
#      - id: page_setting
#        lambda: |-
#          it.printf(64, 0, id(font1), TextAlign::TOP_CENTER, "Alarm State: %s", id(maxxi).state.c_str());
#      - id: page_error
#        lambda: |-
#          it.printf(64, 0, id(font1), TextAlign::TOP_CENTER, "Error");
          
interval:
  - interval: 5s
    then:
      - display.page.show: page_init
      - component.update: my_display


web_server:
  port: 80
